From bcd239f7b06713ceba4ef93cb03da0deac4ef9fe Mon Sep 17 00:00:00 2001
From: Paul Berry <stereotype441@gmail.com>
Date: Wed, 14 Nov 2012 14:54:32 -0800
Subject: [PATCH 27/29] intel: Hook up dd_function_table::SetBackgroundContext

---
 src/mesa/drivers/dri/i965/brw_context.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/src/mesa/drivers/dri/i965/brw_context.c b/src/mesa/drivers/dri/i965/brw_context.c
index 0e882cac84c..53e29d87ef2 100644
--- a/src/mesa/drivers/dri/i965/brw_context.c
+++ b/src/mesa/drivers/dri/i965/brw_context.c
@@ -125,6 +125,22 @@
    return buffer;
 }
 
+static void brw_set_background_context(struct gl_context *ctx)
+{
+   struct brw_context *brw = brw_context(ctx);
+   __DRIcontext *driContext = brw->driContext;
+   __DRIscreen *driScreen = driContext->driScreenPriv;
+   const __DRIbackgroundCallableExtension *backgroundCallable
+      = driScreen->dri2.backgroundCallable;
+
+   /* Note: Mesa will only call this function if we've called
+    * _mesa_enable_multithreading().  We only do that if the loader exposed
+    * the __DRI_BACKGROUND_CALLABLE extension.  So we know that
+    * backgroundCallable is not NULL.
+    */
+   backgroundCallable->setBackgroundContext(driContext->loaderPrivate);
+}
+
 static const GLubyte *
 intel_get_string(struct gl_context * ctx, GLenum name)
 {
@@ -330,6 +346,9 @@
    if (devinfo->gen >= 6)
       functions->GetSamplePosition = gen6_get_sample_position;
 
+   /* Multi-threading */
+   functions->SetBackgroundContext = brw_set_background_context;
+
    /* GL_ARB_get_program_binary */
    brw_program_binary_init(brw->screen->deviceID);
    functions->GetProgramBinaryDriverSHA1 = brw_get_program_binary_driver_sha1;
-- 
2.11.1
