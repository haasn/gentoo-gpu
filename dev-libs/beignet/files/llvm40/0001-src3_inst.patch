From beignet-bounces@lists.freedesktop.org Fri Mar 17 06:09:48 2017
Return-Path: <beignet-bounces@lists.freedesktop.org>
Received: from mail.snewbury.org.uk ([unix socket])
	 by mail.snewbury.org.uk (Cyrus 2.5.10) with LMTPA;
	 Fri, 17 Mar 2017 06:09:48 +0000
X-Sieve: CMU Sieve 2.4
X-Virus-Scanned: amavisd-new at snewbury.org.uk
Authentication-Results: mail.snewbury.org.uk (amavisd-new); dkim=neutral
	reason="invalid (public key: not available)" header.d=intel.com
Received: from gabe.freedesktop.org (gabe.freedesktop.org
 [131.252.210.177]) by mail.snewbury.org.uk (8.14.9/8.14.9) with ESMTP id
 v2H69iDA031461 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384
 bits=256 verify=NO) for <steve@snewbury.org.uk>; Fri, 17 Mar 2017 06:09:45
 GMT
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D4F536EC9D;
	Fri, 17 Mar 2017 06:13:47 +0000 (UTC)
X-Original-To: beignet@lists.freedesktop.org
Delivered-To: beignet@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6A32B6EC9D
 for <beignet@lists.freedesktop.org>; Fri, 17 Mar 2017 06:13:46 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=intel.com; i=@intel.com; q=dns/txt; s=intel;
 t=1489731226; x=1521267226;
 h=from:to:cc:subject:date:message-id;
 bh=OHJffkgusScgO7kYbHuGXkpvE7UqivGNSauaebkoCMA=;
 b=V27Y3D83zW2KQktxk+g40vorBli+zvyFPMGKAH1Mes3lKQr0P0vueEcc
 ibCLzmVvD3ia3AXeseJ7ldKFvbQJhg==;
Received: from orsmga004.jf.intel.com ([10.7.209.38])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 16 Mar 2017 23:13:36 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.36,175,1486454400"; d="scan'208";a="68271651"
Received: from pxl-ivb.sh.intel.com ([10.239.160.26])
 by orsmga004.jf.intel.com with ESMTP; 16 Mar 2017 23:13:34 -0700
From: Xiuli Pan <xiuli.pan@intel.com>
To: beignet@lists.freedesktop.org
Date: Fri, 17 Mar 2017 14:15:57 +0800
Message-Id: <1489731364-30284-1-git-send-email-xiuli.pan@intel.com>
X-Mailer: git-send-email 2.7.4
Cc: Pan Xiuli <xiuli.pan@intel.com>
Subject: [Beignet] [PATCH 1/7] Backend: Fix flag and subflag seting for src
	3 instruction
X-BeenThere: beignet@lists.freedesktop.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: An open source open CL implemenation for Intel platform
 <beignet.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/beignet>,
 <mailto:beignet-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/beignet>
List-Post: <mailto:beignet@lists.freedesktop.org>
List-Help: <mailto:beignet-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/beignet>,
 <mailto:beignet-request@lists.freedesktop.org?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Errors-To: beignet-bounces@lists.freedesktop.org
Sender: "Beignet" <beignet-bounces@lists.freedesktop.org>
X-Evolution-Source: 1389266509.29991.2@artifact
Content-Transfer-Encoding: 8bit

From: Pan Xiuli <xiuli.pan@intel.com>

Before gen8, src 3 instruction has different flag and subflag bits

Signed-off-by: Pan Xiuli <xiuli.pan@intel.com>
---
 backend/src/backend/gen75_encoder.cpp    | 10 ++++++++--
 backend/src/backend/gen7_encoder.cpp     | 10 ++++++++--
 backend/src/backend/gen7_instruction.hpp |  5 +++--
 3 files changed, 19 insertions(+), 6 deletions(-)

diff --git a/backend/src/backend/gen75_encoder.cpp b/backend/src/backend/gen75_encoder.cpp
index b82cc43..06cca3c 100644
--- a/backend/src/backend/gen75_encoder.cpp
+++ b/backend/src/backend/gen75_encoder.cpp
@@ -53,8 +53,14 @@ namespace gbe
     gen7_insn->header.quarter_control = this->curr.quarterControl;
     gen7_insn->bits1.ia1.nib_ctrl = this->curr.nibControl;
     gen7_insn->header.mask_control = this->curr.noMask;
-    gen7_insn->bits2.ia1.flag_reg_nr = this->curr.flag;
-    gen7_insn->bits2.ia1.flag_sub_reg_nr = this->curr.subFlag;
+    if (insn->header.opcode == GEN_OPCODE_MAD || insn->header.opcode == GEN_OPCODE_LRP)
+    {
+      gen7_insn->bits1.da3src.flag_reg_nr = this->curr.flag;
+      gen7_insn->bits1.da3src.flag_sub_reg_nr = this->curr.subFlag;
+    } else {
+      gen7_insn->bits2.ia1.flag_reg_nr = this->curr.flag;
+      gen7_insn->bits2.ia1.flag_sub_reg_nr = this->curr.subFlag;
+    }
     if (this->curr.predicate != GEN_PREDICATE_NONE) {
       gen7_insn->header.predicate_control = this->curr.predicate;
       gen7_insn->header.predicate_inverse = this->curr.inversePredicate;
diff --git a/backend/src/backend/gen7_encoder.cpp b/backend/src/backend/gen7_encoder.cpp
index 4b2cd9a..d526f5d 100644
--- a/backend/src/backend/gen7_encoder.cpp
+++ b/backend/src/backend/gen7_encoder.cpp
@@ -46,8 +46,14 @@ namespace gbe
     gen7_insn->header.quarter_control = this->curr.quarterControl;
     gen7_insn->bits1.ia1.nib_ctrl = this->curr.nibControl;
     gen7_insn->header.mask_control = this->curr.noMask;
-    gen7_insn->bits2.ia1.flag_reg_nr = this->curr.flag;
-    gen7_insn->bits2.ia1.flag_sub_reg_nr = this->curr.subFlag;
+    if (insn->header.opcode == GEN_OPCODE_MAD || insn->header.opcode == GEN_OPCODE_LRP)
+    {
+      gen7_insn->bits1.da3src.flag_reg_nr = this->curr.flag;
+      gen7_insn->bits1.da3src.flag_sub_reg_nr = this->curr.subFlag;
+    } else {
+      gen7_insn->bits2.ia1.flag_reg_nr = this->curr.flag;
+      gen7_insn->bits2.ia1.flag_sub_reg_nr = this->curr.subFlag;
+    }
     if (this->curr.predicate != GEN_PREDICATE_NONE) {
       gen7_insn->header.predicate_control = this->curr.predicate;
       gen7_insn->header.predicate_inverse = this->curr.inversePredicate;
diff --git a/backend/src/backend/gen7_instruction.hpp b/backend/src/backend/gen7_instruction.hpp
index 7d7eada..4dc5b32 100644
--- a/backend/src/backend/gen7_instruction.hpp
+++ b/backend/src/backend/gen7_instruction.hpp
@@ -142,8 +142,9 @@ union Gen7NativeInstruction
 
       struct {
         uint32_t dest_reg_file:1;
-        uint32_t flag_subreg_num:1;
-        uint32_t pad0:2;
+        uint32_t flag_sub_reg_nr:1;
+        uint32_t pad0:1;
+        uint32_t flag_reg_nr:1;
         uint32_t src0_abs:1;
         uint32_t src0_negate:1;
         uint32_t src1_abs:1;
-- 
2.7.4

_______________________________________________
Beignet mailing list
Beignet@lists.freedesktop.org
https://lists.freedesktop.org/mailman/listinfo/beignet

